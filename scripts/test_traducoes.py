#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Script para testar a integra√ß√£o de tradu√ß√£o com OpenRouter
"""
import asyncio
import sys
sys.path.insert(0, '/Users/felipematossardinhapinto/Library/CloudStorage/GoogleDrive-Felipe@felipematos.net/My Drive/10K/Projetos/2025/Sebrae Nacional/Code')

from app.utils.idiomas import traduzir_query

async def test_traducoes():
    """Testa a tradu√ß√£o com dados mockados"""
    print("=" * 80)
    print("TESTANDO INTEGRA√á√ÉO DE TRADU√á√ÉO COM OPENROUTER")
    print("=" * 80)

    # Dados de teste
    testes = [
        {
            "texto": "Falta de acesso a cr√©dito para startups",
            "origem": "pt",
            "alvo": "en",
            "esperado": "tradu√ß√£o para ingl√™s"
        },
        {
            "texto": "Lack of access to credit for startups",
            "origem": "en",
            "alvo": "pt",
            "esperado": "tradu√ß√£o para portugu√™s"
        },
        {
            "texto": "Dificuldade em regula√ß√£o e compliance",
            "origem": "pt",
            "alvo": "es",
            "esperado": "tradu√ß√£o para espanhol"
        },
    ]

    for i, teste in enumerate(testes, 1):
        print(f"\nüìù Teste {i}: {teste['origem'].upper()} ‚Üí {teste['alvo'].upper()}")
        print(f"   Texto original: {teste['texto']}")
        print(f"   Esperado: {teste['esperado']}")

        try:
            resultado = await traduzir_query(
                teste['texto'],
                teste['origem'],
                teste['alvo']
            )
            print(f"   ‚úÖ Resultado: {resultado}")
        except Exception as e:
            print(f"   ‚ùå Erro: {str(e)[:100]}")

    print("\n" + "=" * 80)
    print("TESTE CONCLU√çDO")
    print("=" * 80)

if __name__ == "__main__":
    asyncio.run(test_traducoes())
